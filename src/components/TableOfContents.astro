---
import type { MarkdownHeading } from 'astro';

const { headings = [] } = Astro.props;

// Function to organize headings into a nested structure based on depth
function organizeHeadings(headings: MarkdownHeading[]) {
  // Filter out h1 (title) as it's already shown
  const filteredHeadings = headings.filter(h => h.depth > 1);
  
  // Only display up to h3 in the TOC for clarity
  return filteredHeadings.filter(h => h.depth <= 3);
}

const tocHeadings = organizeHeadings(headings);
---

<!-- Desktop TOC -->
<div class="hidden md:block md:col-span-1">
  <div class="sticky top-20 pl-4 border-l border-gray-200">
    <h2 class="text-lg font-semibold mb-4">On this page</h2>
    {tocHeadings.length > 0 && (
      <nav class="toc">
        <ul class="space-y-2 text-gray-600">
          {tocHeadings.map(heading => (
            <li class={`pl-${(heading.depth - 2) * 3}`}>
              <a
                href={`#${heading.slug}`}
                class="hover:text-blue-600 inline-block py-1 text-sm"
              >
                {heading.text}
              </a>
            </li>
          ))}
        </ul>
      </nav>
    )}
  </div>
</div>

<!-- Mobile TOC - will be positioned in the blog layout -->
<div class="md:hidden w-full">
  <details class="bg-gray-50 p-4 rounded-lg">
    <summary class="text-lg font-semibold cursor-pointer">
      On this page
    </summary>
    {tocHeadings.length > 0 && (
      <nav class="mt-3">
        <ul class="space-y-2 text-gray-600">
          {tocHeadings.map(heading => (
            <li class={`pl-${(heading.depth - 2) * 3}`}>
              <a
                href={`#${heading.slug}`}
                class="hover:text-blue-600 inline-block py-1 text-sm"
              >
                {heading.text}
              </a>
            </li>
          ))}
        </ul>
      </nav>
    )}
  </details>
</div>