---
import type { GetStaticPathsResult, GetStaticPathsOptions } from "astro";
import Base from "../../layouts/Base.astro";
import { getCollection } from "astro:content";
import { CalendarDays } from "@lucide/astro";
import { SITE_ROOT } from "../../consts";

export async function getStaticPaths(): Promise<GetStaticPathsResult> {
  const allPosts = await getCollection("posts");
  
  // Get all unique tags from all posts
  const allTags = new Set<string>();
  allPosts.forEach(post => {
    if (post.data.tags) {
      post.data.tags.forEach(tag => allTags.add(tag));
    }
  });

  // Generate a page for each tag
  return Array.from(allTags).map(tag => ({
    params: { tag },
    props: { tag }
  }));
}

type Props = {
  tag: string;
};

const { tag } = Astro.props as Props;
const allPosts = (await getCollection("posts")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

// Filter posts by the current tag
const filteredPosts = allPosts.filter(post => 
  post.data.tags && post.data.tags.includes(tag)
);
---

<Base title={`Posts tagged with "${tag}"`}>
  <div class="max-w-4xl mx-auto p-4">
    <div class="mb-8">
      <h1 class="text-3xl font-bold text-gray-800 mb-2">
        Posts tagged with "<span class="text-blue-600">{tag}</span>"
      </h1>
      <p class="text-gray-600">
        {filteredPosts.length} post{filteredPosts.length === 1 ? '' : 's'} found
      </p>
    </div>

    <div class="space-y-6">
      {
        filteredPosts.map((post) => (
          <article class="my-0 py-4 px-4 rounded-lg flex flex-col gap-4 border border-transparent w-full hover:border-gray-200 transition-colors">
            <div class="flex-1">
              <h3 class="text-lg font-semibold text-gray-800">
                <a
                  href={`${SITE_ROOT}/posts/${post.id}`}
                  class="hover:text-blue-700 hover:underline"
                >
                  {post.data.title}
                </a>
              </h3>
              <span class="flex text-gray-600 items-center">
                <CalendarDays size={16} stroke-width={2} />
                <p class="pl-1 text-sm">
                  {post.data.pubDate.toLocaleDateString("en-us", {
                    year: "numeric",
                    month: "long",
                    day: "2-digit",
                  })}
                </p>
              </span>
              <p class="text-gray-600 mt-2">{post.data.description}</p>
              {post.data.tags && (
                <p class="text-gray-500 text-sm mt-2">
                  {post.data.tags.map((postTag) => (
                    <a
                      href={`${SITE_ROOT}/tags/${postTag}`}
                      class={`inline-flex ml-1 items-center rounded-md px-2 py-1 text-xs font-medium ring-1 ring-inset transition-colors ${
                        postTag === tag 
                          ? 'bg-blue-100 text-blue-700 ring-blue-200' 
                          : 'bg-gray-50 text-gray-600 ring-gray-500/10 hover:bg-blue-50 hover:text-blue-700'
                      }`}
                    >
                      {postTag}
                    </a>
                  ))}
                </p>
              )}
            </div>
          </article>
        ))
      }
    </div>

    {filteredPosts.length === 0 && (
      <div class="text-center py-12">
        <p class="text-gray-500 text-lg">No posts found with this tag.</p>
        <a href={`${SITE_ROOT}/posts/`} class="text-blue-600 hover:underline mt-2 inline-block">
          View all posts
        </a>
      </div>
    )}
  </div>
</Base> 