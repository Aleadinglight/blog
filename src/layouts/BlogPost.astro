---
import Base from "./Base.astro";
import { CalendarDays } from "@lucide/astro";
import TableOfContents from "../components/TableOfContents.astro";
// Get props for the blog post
const {
  title,
  description,
  pubDate,
  heroImage,
  tags,
  headings = [],
} = Astro.props;

// Format dates
const formattedPubDate = pubDate.toLocaleDateString("en-us", {
  year: "numeric",
  month: "long",
  day: "2-digit",
});
---

<Base title={title}>
  <div class="max-w-6xl mx-auto px-4 py-6">
    <div class="md:grid md:grid-cols-4 md:gap-8">
      <!-- Main content area -->
      <div class="md:col-span-3 py-6">
        <h1 class="text-4xl font-bold text-gray-900 mb-4">{title}</h1>
        <hr class="border-gray-200 mb-4" />
        <div class="flex items-center text-gray-700 text-lg mb-6">
          {
            formattedPubDate && (
              <span class="flex items-center">
                <CalendarDays stroke-width={2} />
                <p class="pl-1">
                  Last updated on{" "}
                  <time datetime={pubDate.toISOString()}>
                    {formattedPubDate}
                  </time>
                </p>
              </span>
            )
          }
        </div>
        <hr class="border-gray-200 mb-4" />
        <!-- Mobile TOC - appears after description/tags -->
        <div class="md:hidden mb-6">
          <TableOfContents headings={headings} variant="mobile" />
        </div>
        <article
          class="prose lg:prose-xl prose-img:rounded-xl
            prose-h1:text-4xl prose-h1:font-bold prose-h1:mb-2 prose-h1:mt-4
            prose-h2:text-3xl prose-h2:font-semibold prose-h2:mb-2 prose-h2:mt-4
            prose-h3:text-2xl prose-h3:font-semibold prose-h3:mb-2 prose-h3:mt-4
            prose-li:mb-0 prose-li:mt-0
            prose-p:leading-normal prose-p:mb-4 prose-p:mt-0
            prose-pre:border prose-pre:border-neutral-300
            max-w-none"
        >
          <div class="blog-content">
            <slot />
          </div>
        </article>

        <div class="mb-8">
          {
            description && (
              <p class="text-xl text-gray-600 mb-4">{description}</p>
            )
          }

          {
            tags && tags.length > 0 && (
              <div class="flex flex-wrap gap-2 mb-6">
                {tags.map((tag: string) => (
                  <span class="inline-flex items-center rounded-md bg-blue-50 px-2 py-1 text-xs font-medium text-blue-700 ring-1 ring-inset ring-blue-700/10">
                    {tag}
                  </span>
                ))}
              </div>
            )
          }
        </div>
      </div>

      <!-- Desktop TOC - sticky sidebar -->
      <div class="hidden md:block md:col-span-1">
        <div class="sticky top-20 pl-4 border-l border-gray-200">
          <TableOfContents headings={headings} variant="desktop" />
        </div>
      </div>
    </div>
  </div>
</Base>
